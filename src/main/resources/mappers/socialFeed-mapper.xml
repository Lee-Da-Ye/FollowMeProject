<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="socialFeedMapper">

	<resultMap id="socialFeedResultMap" type="SocialFeedDto">
		<id column="sf_no" property="sfNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="sf_content" property="sfContent"/>
		<result column="sf_likes" property="sfLikes"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="status" property="status"/>
		<result column="profile_img_path" property="profileImgPath"/>
		<result column="mem_name" property="memName"/>
		
		<collection resultMap="attachmentResultMap" property="attachList" />
	</resultMap>
	
	<resultMap id="attachmentResultMap" type="AttachmentDto">
		<id column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="origin_name" property="originName"/>
		<result column="system_name" property="systemName"/>
		<result column="type" property="type"/>
		<result column="ref_no" property="refNo"/>
		<result column="upload_date" property="uploadDate"/>
	</resultMap>
	
	<resultMap id="replyResultMap" type="ReplyDto">
		<id column="reply_no" property="replyNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="ref_type" property="refType"/>
		<result column="ref_bno" property="refBno"/>
		<result column="reply_content" property="replyContent"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="status" property="status"/>
		<result column="profile_img_path" property="profileImgPath"/>
		<result column="mem_name" property="memName"/>
	</resultMap>

	<insert id="insertFeed">
		insert
			into tb_socialfeed
			(
				sf_no
			,	mem_no
			, sf_content
			, sf_likes
			, enroll_date
			)
			values
			(
				seq_sfno.nextval
			, #{memNo}
			, #{sfContent}
			, 0
			, sysdate	
			)
	</insert>
	
		<insert id="insertAttach">
		insert
		  into tb_attachment
		  (
		  	file_no
		  , file_path
		  , origin_name
		  , system_name
		  , type
		  , ref_no
		  )
		  values
		  (
		  	seq_fileno.nextval
		  , #{filePath}
		  , #{originName}
		  , #{systemName}
		  , #{type}
		  <choose>
		  	<when test="refNo == 0">
		  		, seq_sfno.currval
		  	</when>
		  	<otherwise>
		  		, #{refNo}
		  	</otherwise>
		  </choose>
		  )
	</insert>
	
	<select id="selectList" resultMap="socialFeedResultMap">
	<![CDATA[
		select sf_no
				 , mem_name
				 , profile_img_path
				 , sf_content
				 , (CASE
                 WHEN TO_CHAR(s.enroll_date, 'YYYY') = TO_CHAR(SYSDATE, 'YYYY') THEN
                      TO_CHAR(s.enroll_date, 'MM"월" DD"일" ') ||
                		 (CASE
                      		WHEN TO_CHAR(s.enroll_date, 'HH24') < 12 THEN '오전 '
                      		ELSE '오후 '
                 			END) ||
                 			TO_NUMBER(TO_CHAR(s.enroll_date, 'HH12')) || '시 ' || 
                 			TO_CHAR(s.enroll_date, 'MI"분"')
            		 ELSE
                			TO_CHAR(s.enroll_date, 'YYYY"년" MM"월" DD"일"')
        		END) AS  enroll_date
         , file_no
         , file_path
         , system_name
		  from tb_socialfeed s
		  left join tb_mem m on s.mem_no = m.mem_no
          left join tb_attachment on (type = 'S' and ref_no = sf_no)
		 where s.status = 'Y'
		 order by sf_no desc
	 ]]>
	</select>
	
	<select id="selectReplyList" resultMap="replyResultMap">
		select  reply_no
				  , r.mem_no
				  , mem_name
				  , reply_content
				  , profile_img_path
				  , to_char(r.enroll_date, 'YYYY-MM-DD HH24:MI:SS') "enroll_date"
			 from tb_reply r
		   join tb_mem m on (r.mem_no = m.mem_no)
		  where r.status='Y' 
			  and ref_bno = #{sfNo}
		  order by reply_no asc
	</select>	
	
	<insert id="insertReply">
    insert 
     into reply
     (
       REPLY_NO
     , MEM_NO
     , REF_TYPE
     , REF_BNO
     , REPLY_CONTENT
     )
     values
     (
     	 seq_replyno.nextval
     , #{memNo}
		 , 'S'
     , #{refBno}
     , #{replyContent}
     )

	</insert>
	
	<update id="deleteReply">
		update reply
		set status = 'N'
		where reply_no = #{replyNo}
	</update>
	


</mapper>