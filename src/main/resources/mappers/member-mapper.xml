<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
  
  <resultMap id="memberResult" type="MemberDto">
		<id column="mem_no" property="memNo"/>
		<result column="mem_pwd" property="memPwd"/>
		<result column="dept_no" property="deptNo"/>
		<result column="dept_name" property="deptName"/>
		<result column="profile_img_path" property="profilImgPath"/>
		<result column="mem_gender" property="gender"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_securityno" property="securityNo"/>
		<result column="mem_address" property="address"/>
		<result column="mem_email" property="memEmail"/>
		<result column="mem_grade" property="memGrade"/>
		<result column="mem_role" property="memRole"/>
		<result column="extension_number" property="extensionNumber"/>
		<result column="phone" property="phone"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="quit_date" property="quitDate"/>
		<result column="mem_salary" property="memSalary"/>
		<result column="account_no" property="accountNo"/>
		<result column="sig_no" property="sigNo"/>
		<result column="mem_incentive" property="memIncentive"/>
		<result column="mem_certificate" property="memCertificate"/>
		<result column="mem_welfare" property="memWelfare"/>
		<result column="mem_career" property="memCareer"/>
		<result column="authorization_level" property="authLevel"/>
		<result column="status" property="status"/>
	</resultMap>
  
  <!-- 로그인용 (암호화 적용)-->
  <select id="selectMember" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, 
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_Date, quit_date, mem_salary,
			 	 account_no, sig_no, 
			 	 mem_incentive, mem_certificate, mem_welfare, mem_career,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status = 'Y'
		   and mem_no = #{memNo}
	</select>
	
	<select id="memEmailCheck" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, 
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_Date, quit_date, mem_salary,
			 	 account_no, sig_no, 
			 	 mem_incentive, mem_certificate, mem_welfare, mem_career,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status = 'Y'
		   and mem_email = #{memEmail}
	</select>
	
	<!-- 임시 비밀번호(암호화된 것) 발급 후 사원정보 업데이트 (임시 로그인용) -->
  <update id="updateTempPwd">
  	update
  				tb_mem
  		 set
  		 		mem_pwd = #{hashedPassword}
  	 where
  	 			mem_no = #{memNo}
  </update>
  
  <!-- 사용자가 입력한 이메일로 변경 (업데이트) -->
  <update id="changeEmail">
  	update
  				tb_mem
  		 set
  		  	mem_email = #{memNewEmail}
  	 where
  	      mem_no = #{memNo}
  </update>
  
  <!-- 사용자가 입력한 이메일 중복확인용 -->
  <select id="memEmailDoubleCheck" resultMap="memberResult">
  	select
			 	 mem_no, mem_pwd, dept_name,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, 
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_Date, quit_date, mem_salary,
			 	 account_no, sig_no, 
			 	 mem_incentive, mem_certificate, mem_welfare, mem_career,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status = 'Y'
		   and mem_email = #{newEmail}
  </select>
  
  
</mapper>
