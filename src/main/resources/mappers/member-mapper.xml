<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
  
  <resultMap id="memberResult" type="MemberDto">
		<id column="mem_no" property="memNo"/>
		<result column="mem_pwd" property="memPwd"/>
		<result column="dept_no" property="deptNo"/>
		<result column="dept_name" property="deptName"/>
		<result column="profile_img_path" property="profileImgPath"/>
		<result column="sig_img_path" property="sigImgPath"/>
		<result column="mem_gender" property="gender"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_securityno" property="securityNo"/>
		<result column="mem_address" property="address"/>
		<result column="mem_email" property="memEmail"/>
		<result column="mem_grade" property="memGrade"/>
		<result column="mem_role" property="memRole"/>
		<result column="extension_number" property="extensionNumber"/>
		<result column="phone" property="phone"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="quit_date" property="quitDate"/>
		<result column="mem_salary" property="memSalary"/>
		<result column="account_no" property="accountNo"/>
		<result column="mem_incentive" property="memIncentive"/>
		<result column="mem_certificate" property="memCertificate"/>
		<result column="mem_welfare" property="memWelfare"/>
		<result column="authorization_level" property="authLevel"/>
		<result column="status" property="status"/>
	</resultMap>
	
	<resultMap id="licenseResult" type="LicenseDto">
		<id column="lic_no" property="licNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="lic_name" property="licName"/>
		<result column="lic_confirmno" property="licConfirmNo"/>
		<result column="issued_date" property="issuedDate"/>
		<result column="lic_agency" property="licAgency"/>
		<result column="origin_name" property="originName"/>
		<collection resultMap="attachmentResult" property="attachment"/>
	</resultMap>
	
	<resultMap id="attachmentResult" type="AttachmentDto">
		<id column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="origin_name" property="originName"/>
		<result column="system_name" property="systemName"/>
		<result column="type" property="type"/>
		<result column="ref_no" property="refNo"/>
		<result column="upload_date" property="uploadDate"/>
	</resultMap>
	
	<resultMap id="accountResult" type="AccountDto">
		<id column="account_no" property="accountNo"/>
		<result column="bank" property="bankName"/>
		<result column="bank_account_no" property="bankAccountNo"/>
		<result column="account_holder" property="accountHolder"/>
	</resultMap>
  
  <!-- 로그인용 (암호화 적용)-->
  <select id="selectMember" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name, tb_mem.dept_no,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, sig_img_path,
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_Date, quit_date, mem_salary,
			 	 account_no,
			 	 mem_incentive, mem_certificate, mem_welfare,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status = 'Y'
		   and mem_no = #{memNo}
	</select>
	
	<select id="memEmailCheck" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name,tb_mem.dept_no,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, sig_img_path,
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_Date, quit_date, mem_salary,
			 	 account_no,
			 	 mem_incentive, mem_certificate, mem_welfare,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status = 'Y'
		   and mem_email = #{memEmail}
	</select>
	
	<!-- 임시 비밀번호(암호화된 것) 발급 후 사원정보 업데이트 (임시 로그인용) -->
  <update id="updateTempPwd">
  	update
  				tb_mem
  		 set
  		 		mem_pwd = #{hashedPassword}
  	 where
  	 			mem_no = #{memNo}
  </update>
  
  <!-- 사용자가 입력한 이메일로 변경 (업데이트) -->
  <update id="changeEmail">
  	update
  				tb_mem
  		 set
  		  	mem_email = #{memNewEmail}
  	 where
  	      mem_no = #{memNo}
  </update>
  
  <!-- 사용자가 입력한 이메일 중복확인용 -->
  <select id="memEmailDoubleCheck" resultMap="memberResult">
  	select
			 	 mem_no, mem_pwd, dept_name,tb_mem.dept_no,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, sig_img_path,
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_Date, quit_date, mem_salary,
			 	 account_no,
			 	 mem_incentive, mem_certificate, mem_welfare,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status = 'Y'
		   and mem_email = #{newEmail}
  </select>
  
  <!-- 사용자의 자격증 정보를 조회하는용 -->
  <select id="selectLicense" resultMap="licenseResult">
  	select
        lic_no, m.mem_no, lic_name, lic_confirmno, issued_date, lic_agency
        , (
                select origin_name
	              from tb_attachment
	             where type = 'L'
	               and ref_no = lic_no
	          ) origin_name
 		 from  tb_license l
  	 left join tb_mem m on (m.mem_no = l.mem_no)
  	where m.status = 'Y'
  	  and m.mem_no = #{memNo}
  	order by lic_no asc
  </select>
  
  <!--  사용자의 계좌정보를 조회하는용 -->
  <select id="selectAccount" resultMap="accountResult">
  	select account_no, bank, bank_account_no, account_holder
		  from tb_account
		 where account_no = (select account_no 
		                       from tb_mem
		                      where mem_no = #{memNo})
  </select>
  
  <!-- 사용자의 자격증 정보를 수정하는용 -->
  <update id="updateLicense">
  	update 
  				tb_license
  		 set
  		    lic_name = #{licName},
  		    lic_confirmno = #{licConfirmNo},
  		    issued_date = #{issuedDate},
  		    lic_agency = #{licAgency}
  	 where
  	 			lic_no = #{licNo}
  </update>
 
 	<!-- 사용자의 자격증 정보를 삭제하는용 -->
 	<delete id="deleteLicense">
 		delete
 		 			from tb_license
 		     where lic_no = #{licNo}
 	</delete>
 	
 	<!-- 사용자의 자격증 정보를 추가하는용 -->
 	<insert id="addLicense">
 		insert
 					into tb_license
 					(
 						lic_no,
 						mem_no,
 						lic_name,
 						lic_confirmno,
 						issued_date,
 						lic_agency
 					)
 					values
 					(
 						seq_lic.nextval,
 						#{memNo},
 						#{licName},
 						#{licConfirmNo},
 						#{issuedDate},
 						#{licAgency}
 					)
 	</insert>
 	
 	<!-- 사용자의 개인정보 업데이트용 -->
 	<update id="updatePersonalInfo">
 		update
 					tb_mem
 			set 
 					mem_name = #{memName},
 					mem_gender = #{gender},
 					phone = #{phone},
 					mem_address = #{address}
 		where mem_no = #{memNo}
 	</update>
 	
 	<!-- 사용자의 계좌정보 업데이트용 -->
 	<update id="updateAccountInfo">
 		update
 					tb_account
 			set 
 					bank = #{bankName},
 			    bank_account_no = #{bankAccountNo},
 			    account_holder = #{accountHolder}
 		where account_no = #{accountNo}
 	</update>
  
  <!-- 첨부파일 추가용 -->
  <insert id="insertAttach">
    insert into tb_attachment
    (
        file_no
      , file_path
      , origin_name
      , system_name
      , type
      , ref_no
    )
    values
    (
        seq_fileno.nextval
      , #{filePath}
      , #{originName}
      , #{systemName}
      , #{type}
      , 
      <choose>
        <when test="refNo == 0">
          seq_lic.currval
        </when>
        <otherwise>
          #{refNo}
        </otherwise>     
      </choose> 
    )
	</insert>
	
	<!-- 자격증 첨부파일 삭제용 -->
	<delete id="deleteAttachment">
		delete
			from tb_attachment
		where ref_no = #{licNo}
	</delete>
	
	<!-- 자격증 첨부파일 조회용 -->
	<select id="selectAttachment" resultMap="attachmentResult">
		select
					file_no, file_path, origin_name, system_name, type, ref_no, upload_date
			from tb_attachment
		where ref_no = #{licNo}
	</select>
	
	<!-- 사용자 프로필 이미지 변경용 -->
	<update id="updateProfileImg">
		update
						 tb_mem
				 set profile_img_path = #{profileImgPath}
			 where mem_no = #{memNo}
	</update>
	
	<!-- 사용자 전자서명 이미지 변경용 -->
	<update id="updateSigImg">
		update
						 tb_mem
				 set sig_img_path = #{sigImgPath}
			 where mem_no = #{memNo}
	</update>
	
	
	<!-- 멤버 리스트 수 조회용 -->
	<select id="selectMemberListCount" resultType="_int">
		select 
					count(*)
			from tb_mem
		 where status in ('Y', 'R')
	</select>
	
	<!-- 멤버 리스트 조회용 -->
	<select id="selectMemberList" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name,tb_mem.dept_no,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, sig_img_path,
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_date, quit_date, mem_salary,
			 	 account_no,
			 	 mem_incentive, mem_certificate, mem_welfare,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		  where status in ('Y', 'R')
		 order by mem_no asc
	</select>
	
	<!-- 인사관리 - 검색기능 결과 조회용 -->
	<select id="searchMemberList" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name,tb_mem.dept_no,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, sig_img_path,
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_date, quit_date, mem_salary,
			 	 account_no,
			 	 mem_incentive, mem_certificate, mem_welfare,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status in ('Y', 'R')
		   and (
        mem_name like '%' || #{keyword} || '%'
        or mem_no like '%' || #{keyword} || '%'
        or dept_name like '%' || #{keyword} || '%'
        or mem_grade like '%' || #{keyword} || '%'
        or mem_role like '%' || #{keyword} || '%'
        or mem_salary like '%' || #{keyword} || '%'
        or enroll_date like '%' || #{keyword} || '%'
        or status like '%' || #{keyword} || '%'
    			)
    	order by mem_no asc
	</select>
	
	<!-- 인사관리 - 검색 시 멤버 리스트 수 조회용 -->
	<select id="searchMemberListCount" resultType="_int">
		select 
					count(*)
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		 where status in ('Y', 'R')
			and (
	        mem_name like '%' || #{keyword} || '%'
	        or mem_no like '%' || #{keyword} || '%'
	        or dept_name like '%' || #{keyword} || '%'
	        or mem_grade like '%' || #{keyword} || '%'
	        or mem_role like '%' || #{keyword} || '%'
	        or mem_salary like '%' || #{keyword} || '%'
	        or enroll_date like '%' || #{keyword} || '%'
	        or status like '%' || #{keyword} || '%'
	    			)
	</select>
	
	<!-- 인사관리 - 신규 직원등록용 -->
	<insert id="insertNewEmp">
		insert
					into tb_mem
					(
						mem_no
					, mem_pwd
					, mem_name
					, authorization_level
					, dept_no
					, mem_grade
					, mem_salary
					, enroll_date
					)
					values
					(
						#{memNo}
					, #{memPwd}
					, #{memName}
					, #{authLevel}
					, #{deptNo}
					, #{memGrade}
					, #{memSalary}
					, #{enrollDate}
					)
	</insert>
	
	<!-- 인사관리 - 신규 직원등록 시 중복 사원번호 수 체크용 -->
	<select id="memNoCheck" resultType="_int">
		select
					count(*)
			from tb_mem
		 where mem_no = #{memNoCheck}
	</select>
	
	<!-- 인사관리 - 직원정보 수정용 -->
	<update id="modifyEmpInfo">
		update
						tb_mem
			 set 
			 			mem_name = #{memName}
			 		, authorization_level = #{authLevel}
			 		, dept_no = #{deptNo}
			 		, mem_grade = #{memGrade}
			 		, mem_salary = #{memSalary}
			 		, mem_role = #{memRole}
			 		, enroll_date = #{enrollDate}
			 		, status = #{status}
		 where mem_no = #{memNo}
	</update>
	
	<!-- 인사관리 - 직원정보 삭제용(status :n) -->
	<update id="deleteEmpInfo">
		update 
					tb_mem
			set
					status = 'N'
		where mem_no = #{memNo}
	</update>
	
	<!-- 인사관리 - 직원정보 조회용(쪽지함 기능에서 사용) -->
	<select id="getMemberList" resultMap="memberResult">
		select
			 	 mem_no, mem_pwd, dept_name,tb_mem.dept_no,
			 	 profile_img_path, mem_gender, 
			 	 mem_name, mem_securityno,
			 	 mem_address, sig_img_path,
			 	 mem_email, mem_grade, mem_role,
			 	 extension_number, phone, 
			 	 enroll_date, quit_date, mem_salary,
			 	 account_no,
			 	 mem_incentive, mem_certificate, mem_welfare,
			 	 authorization_level, status
			from tb_mem
			left join tb_department on (tb_mem.dept_no = tb_department.dept_no)
		  where status in ('Y', 'R')
		 order by mem_no asc
	</select>
	
</mapper>
