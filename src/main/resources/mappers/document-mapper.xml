<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="documentMapper">

	<resultMap id="attachmentResultMap" type="AttachmentDto">
		<id column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="origin_name" property="originName"/>
		<result column="system_name" property="systemName"/>
		<result column="type" property="type"/>
		<result column="ref_no" property="refNo"/>
		<result column="upload_date" property="uploadDate"/>
	</resultMap>
	
	<resultMap id="documentResultMap" type="DocumentDto">
	
		<id column="docu_no" property="docuNo" />
		<result column="docu_category" property="docuCategory" />
		<result column="docu_title" property="docuTitle" />
		<result column="docu_content" property="docuContent" />
		<result column="mem_no" property="memNo" />
		<result column="dept_no" property="deptNo" />
		<result column="regist_date" property="registDate" />
		<result column="ref_mem_no" property="refMemNo" />
		<result column="ref_dept_no" property="refDeptNo" />
		<result column="mid_approver" property="midApprover" />
		<result column="mid_approve_date" property="midApproveDate" />
		<result column="mid_approver_sig" property="midApproverSig" />
		<result column="final_approver" property="finalApprover" />
		<result column="final_approve_date" property="finalApproveDate" />
		<result column="final_approver_sig" property="finalApproverSig" />
		<result column="approver_inf" property="approverInf" />
		<result column="process_reason" property="processReason" />
		<result column="status" property="status" />
		<result column="mid_approve_status" property="midApproveStatus" />
		<result column="final_approve_status" property="finalApproveStatus" />
		<result column="docu_cost" property="docuCost" />
		<result column="docu_remark" property="docuRemark" />
		<result column="docu_start_date" property="docuStartDate" />
		<result column="docu_end_date" property="docuEndDate" />
		<result column="docu_start_place" property="docuStartPlace" />
		<result column="docu_end_place" property="docuEndPlace" />
		<result column="docu_emergency_call" property="docuEmergencyCall" />
		<result column="docu_annual_leave" property="docuAnnualLeave" />
		<result column="docu_item" property="docuItem" />
		<result column="docu_transport_cost" property="docuTransportCost" />
		<result column="docu_fuel_cost" property="docuFuelCost" />
		<result column="docu_food_cost" property="docuFoodCost" />
		<result column="docu_room_cost" property="docuRoomCost" />
		<result column="docu_etc_cost" property="docuEtcCost" />
		<result column="docu_text" property="docuText" />
		<result column="docu_text_note" property="docuTextNote" />
		<result column="docu_count" property="docuCount" />
		<result column="count" property="count"/>
		<result column="mem_name" property="memName"/>
		<result column="dept_name" property="memDeptName"/>
		<result column="ref_dept_name" property="refDeptName"/>
		<result column="ref_mem_name" property="refMemName"/>
		<result column="docu_category_name" property="docuCategoryName" />
		<result column="mem_sig_path" property="memSig" />
		<result column="mem_grade" property="memGrade" />
		<result column="mem_phone" property="memPhone" />
		<result column="mid_reject_date" property="midRejectDate" />
		<result column="final_reject_date" property="finalRejectDate" />
		
		<collection resultMap="attachmentResultMap" property="attachList" />
		
	</resultMap>
	
	<resultMap id="memberResult" type="MemberDto">
		<id column="mem_no" property="memNo"/>
		<result column="dept_name" property="deptName"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_grade" property="memGrade"/>
		<result column="status" property="status"/>
	</resultMap>
	
	<!-- 모든 직원 조회 (참조인 선택 리스트) -->
	<select id="selectMemberList" resultMap="memberResult">
		select mem_no, dept_name, mem_name, mem_grade
		  from tb_mem m
          join tb_department dp on m.dept_no = dp.dept_no
		 where status = 'Y'
     order by mem_no asc
	</select>
	
	
	<!-- 전체 리스트 조회 -->
	<select id="selectDocumentListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where  d.mem_no = #{memNo}
				or (
			    	d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
			    	and d.status != '3'
						)
				or (
						d.status != '3'
						and d.mid_approve_status = 'Y'
						and '대표' = #{memGrade}
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status != '3'
						)
	</select>
	
	<select id="selectDocumentList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where  
		 		 	 (
			      d.mem_no = #{memNo}
					 )
				or (
			    	d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
			    	and d.status != '3'
						)
				or (
						d.status != '3'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status != '3'
						)
		 order
		    by docu_no desc
	</select>
	
	<select id="selectSearchListCount" resultType="_int">
		select 
					 count(*)
      from tb_document d
      left join tb_document_category dc on d.docu_category = dc.docu_category
		  left join tb_mem m on (d.mem_no = m.mem_no)
		  left join tb_department dp on (d.dept_no = dp.dept_no)
		 where ${condition} like '%' || #{keyword} || '%'
		   and (
		   			d.mem_no = #{memNo}
					 )
				or (
			    	m.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
			    	and d.status != '3'
						)
				or (
						d.status != '3'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status != '3'
						)
	</select>
	
	<select id="selectSearchList" resultMap="documentResultMap">
	    select docu_no 
         , docu_category_name
         , docu_title
         , m.mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (d.dept_no = dp.dept_no)
		where ${condition} like '%' || #{keyword} || '%'
		 	and	 	
		 		 	 (
			      d.mem_no = #{memNo}
					 )
				or (
			    	d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
			    	and d.status != '3'
						)
				or (
						d.status != '3'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status != '3'
						)
		 order
		    by d.docu_no desc
	</select>
	
		<select id="statusSearchListCount" resultType="_int">
		select 
					 count(*)
      from tb_document d
      left join tb_document_category dc on d.docu_category = dc.docu_category
		  left join tb_mem m on (d.mem_no = m.mem_no)
		  left join tb_department dp on (d.dept_no = dp.dept_no)
	 	where ${condition} like '%' || #{keyword} || '%'
		 	and	 	d.status = #{status}
		 	or (
			      d.mem_no = #{memNo}
					)
			or (
			    	d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
					)
			or (
						d.status != '3'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
					)
			or (
						d.ref_mem_no = #{memNo}
				 		and d.status = #{status}
				 	)
	</select>
	
	<select id="statusSearchList" resultMap="documentResultMap">
	    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		where ${condition} like '%' ||#{keyword}||'%'
		 	and	 	d.status = #{status}
		 	or (
			      d.mem_no = #{memNo}
					)
			or (
			    	d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
					)
			or (
						d.status = #{status}
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
					)
			or (
						d.ref_mem_no = #{memNo}
				 		and d.status = #{status}
				 	)
		 order
		    by docu_no desc
	</select>

	<!-- 진행중인 리스트 조회 -->
	<select id="selectPendListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where (
			      d.status = '0'
			      and d.mem_no = #{memNo}
					 )
				or (
			    	d.status = '0'
			    	and d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
						)
				or (
						d.status = '0'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status = '0'
						)
	</select>
	
	<select id="selectPendList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where (
			      d.status = '0'
			      and d.mem_no = #{memNo}
					 )
				or (
			    	d.status = '0'
			    	and d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
						)
				or (
			    	d.status = '0'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status = '0'
						)
		 order by docu_no desc
	</select>

	<!-- 승인 리스트 조회 -->
	<select id="selectApprovalListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where (
			      d.status = '1'
			      and d.mem_no = #{memNo}
					 )
				or (
			    	d.status = '1'
			    	and d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
						)
				or (
						d.status = '1'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status = '1'
						)
	</select>
	
	<select id="selectApprovalList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where (
			      d.status = '1'
			      and d.mem_no = #{memNo}
					 )
				or (
			    	d.status = '1'
			    	and d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
						)
				or (
			    	d.status = '1'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status = '1'
						)
		 order
		    by docu_no desc
	</select>
	
	<!-- 반려 리스트 조회 -->
	<select id="selectRejectListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where (
			      d.status = '2'
			      and d.mem_no = #{memNo}
					 )
				or (
			    	d.status = '2'
			    	and d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
						)
				or (
						d.status != '3'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status = '2'
						)
	</select>
	
	<select id="selectRejectList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where (
			      d.status = '2'
			      and d.mem_no = #{memNo}
					 )
				or (
			    	d.status = '2'
			    	and d.dept_no = #{deptNo}
			    	and '팀장' = #{memGrade}
						)
				or (
			    	d.status = '2'
						and (d.mid_approve_status = 'Y' or mid_approver is null) 
						and final_approver = #{memNo}
						)
				or (
						d.ref_mem_no = #{memNo}
						and d.status = '2'
						)
		 order
		    by docu_no desc
	</select>
	
	<!-- 회수 리스트 조회 -->
	<select id="selectRecallListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where d.status = '3'
			     and d.mem_no = #{memNo}

	</select>
	
	<select id="selectRecallList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where d.status = '3'
			     and d.mem_no = #{memNo}

		 order
		    by docu_no desc
	</select>
	
	<!-- 나를 참조하는 리스트 조회 -->
	<select id="selectRefListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		 where not d.status = '3'
			 and ref_mem_no = #{memNo}
					 
	</select>
	
	<select id="selectRefList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where d.status != '3'
			 and ref_mem_no = #{memNo}
		 order
		    by docu_no desc
	</select>

	<!-- 본인이 결재권자일때 미처리 리스트 조회 -->
	<select id="selectNotDoneListCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		 where (d.status = '0' 
		 				and mid_approve_status = 'N' 
		 				and mid_approver = #{memNo})
			  or (
			  		d.status = '0'
			  		and mid_approve_status = 'Y' 
			  		and final_approve_status = 'N' 
			  		and final_approver = #{memNo}
			  		)
			  or (d.status = '0'
			  	  and mid_approver is null 
			  	  and final_approve_status = 'N' 
			  	  and final_approver = #{memNo})
					 
	</select>

	<select id="selectNotDoneList" resultMap="documentResultMap">
    select docu_no 
         , dc.docu_category_name
         , docu_title
         , mem_name
         , dept_name
         , to_char(regist_date, 'YYYY-MM-DD') as regist_date
         , d.status
         , to_char(final_approve_date, 'YYYY-MM-DD') as final_approve_date
     from tb_document d
     left join tb_document_category dc on d.docu_category = dc.docu_category
		 left join tb_mem m on (d.mem_no = m.mem_no)
		 left join tb_department dp on (m.dept_no = dp.dept_no)
		 where (d.status = '0' 
		 				and mid_approve_status = 'N' 
		 				and mid_approver = #{memNo})
			  or (
			  		d.status = '0'
			  		and mid_approve_status = 'Y' 
			  		and final_approve_status = 'N' 
			  		and final_approver = #{memNo}
			  		)
			  or (d.status = '0'
			  	  and mid_approver is null 
			  	  and final_approve_status = 'N' 
			  	  and final_approver = #{memNo})
			  				
		 order
		    by docu_no desc
	</select>
	
	
	<!--  글 등록하기  -->
	<insert id="insertDocument">
					insert 
					  into tb_document
					  (
					    docu_no
					  , docu_category
					  , mem_no
					  , dept_no
					  , ref_mem_no
					  , docu_title
		<choose>
			<when test="docuCategory == 1">
					  , docu_content
					  , docu_cost
					  , docu_remark

			</when>
			<when test="docuCategory == 2">
						, docu_content
						, docu_start_date
						, docu_end_date
						, docu_remark	
			</when>
			<when test="docuCategory == 3">
						, docu_content
						, docu_start_date
						, docu_end_date
						, docu_end_place
						, docu_emergency_call
						, docu_annual_leave
			</when>
			<when test="docuCategory == 4">
						, docu_cost
						, docu_start_date
						, docu_item
						, docu_etc_cost
						, docu_remark
			</when>
			<when test="docuCategory == 5">
						, docu_item
						, docu_count
						, docu_etc_cost
						, docu_cost
						, docu_remark
			</when>
			<when test="docuCategory == 6">
						, docu_start_date
						, docu_end_date
						, docu_start_place
						, docu_end_place
						, docu_content
						, docu_transport_cost
						, docu_food_cost
						, docu_fuel_cost
						, docu_room_cost
						, docu_etc_cost
						, docu_cost
			</when>	
			
			<when test="docuCategory == 7">
						, docu_start_date
						, docu_end_date
						, docu_text
						, docu_text_note
						, docu_content
						, ref_dept_no
			</when>
		</choose>
					  )
					  values
					  (
						  seq_docno.nextval
						, #{docuCategory}
						, #{memNo}
						, #{deptNo}
						, #{refMemNo}
						, #{docuTitle}
						
		<choose>
			<when test="docuCategory == 1">
					  , #{docuContent}
					  , #{docuCost}
					  , #{docuRemark}
			</when>
			<when test="docuCategory == 2">
					  , #{docuContent}
						, #{docuStartDate}
						, #{docuEndDate}
						, #{docuRemark}
			</when>
			<when test="docuCategory == 3">
					  , #{docuContent}
						, #{docuStartDate}
						, #{docuEndDate}
						, #{docuEndPlace}
						, #{docuEmergencyCall}
						, #{docuAnnualLeave}
			</when>
			<when test="docuCategory == 4">
						, #{docuCost}
						, #{docuStartDate}
						, #{docuItem}
						, #{docuEtcCost}
						, #{docuRemark}
			</when>
			<when test="docuCategory == 5">
						, #{docuItem}
						, #{docuCount}
						, #{docuEtcCost}
						, #{docuCost}
						, #{docuRemark}
			</when>
			<when test="docuCategory == 6">
						, #{docuStartDate}
						, #{docuEndDate}
						, #{docuStartPlace}
						, #{docuEndPlace}
						, #{docuContent}
						, #{docuTransportCost}
						, #{docuFoodCost}
						, #{docuFuelCost}
						, #{docuRoomCost}
						, #{docuEtcCost}
						, #{docuCost}
			</when>	
			
			<when test="docuCategory == 7">
						, #{docuStartDate}
						, #{docuEndDate}
						, #{docuText}
						, #{docuTextNote}
						, #{docuContent}
						, #{refDeptNo}
			</when>
		</choose>

					  )
					
	</insert>
	
	<insert id="insertAttach">
		insert
		  into tb_attachment
		  (
		  	file_no
		  , file_path
		  , origin_name
		  , system_name
		  , type
		  , ref_no
		  )
		  values
		  (
		  	seq_fileno.nextval
		  , #{filePath}
		  , #{originName}
		  , #{systemName}
		  , #{type}
		  <choose>
		  	<when test="refNo == 0">
		  		, seq_docno.currval
		  	</when>
		  	<otherwise>
		  		, #{refNo}
		  	</otherwise>
		  </choose>
		  )
	</insert>
	
	<!-- 전자문서 조회기능 (detail) -->
	<select id="selectDocument" resultMap="documentResultMap">
	
		select docu_no, docu_category, d.mem_no, m.mem_name, m.mem_grade, d.dept_no, dept_name, to_char(regist_date, 'YYYY-MM-DD') as regist_date
				 , mid_approver, mid_approve_date, final_approver, final_approve_date, docu_title, docu_content, docu_cost, docu_remark, m.phone as mem_phone
				 , docu_start_date, docu_end_date, docu_start_place, docu_end_place, docu_emergency_call, docu_annual_leave, docu_item, docu_etc_cost
				 , docu_count, docu_transport_cost, docu_fuel_cost, docu_food_cost, docu_room_cost, docu_text, docu_text_note, ref_mem_no 
				 , (select dept_name || ' ' || mem_name || ' ' || mem_grade
				      from tb_mem m 
				     where m.mem_no = ref_mem_no) as ref_mem_name
				 , (select sig_img_path
						  from tb_mem
						 where mem_no = d.mem_no) as mem_sig_path
				 , (select sig_img_path 
				 			from tb_mem m
				 		 where m.mem_no = d.mid_approver) as mid_approver_sig
				 , (select sig_img_path	
				 			from tb_mem m
				 		 where m.mem_no = d.final_approver) as final_approver_sig
				 , (select dept_name || ' ' || mem_name || ' ' || mem_grade
				      from tb_mem m
				     where m.mem_no = d.final_approver) as approver_inf
				 , (select dept_name
				 			from tb_department
				 			where dept_no = ref_dept_no) as ref_dept_name
				 		
				 , process_reason
				 , d.status
				 , mid_approve_status
				 , final_approve_status
				 , file_no
		     , file_path
		     , origin_name
		     , system_name
		     
		  from tb_document d
		  left join tb_mem m on d.mem_no = m.mem_no
		  left join tb_department dp on m.dept_no = dp.dept_no
		  left join tb_attachment on (type = 'D' and ref_no = docu_no)
         where docu_no = #{docuNo}

	</select>
	
	<!-- 작성자 본인 글 회수하기 -->
	<update id="recallDocument">
		update
					 tb_document
			 set status = '3'
		 where docu_no = #{docuNo}
	</update>
	
	<!-- 중간결재자 전자문서 '승인' 기능 -->
	<update id="updateMidApprove">
		update
					 tb_document
			 set mid_approve_status = 'Y'
			   , mid_approve_date = sysdate
		 where docu_no = #{docuNo}
	</update>	
  
  <!-- 최종결재자 전자문서 '승인' 기능 -->
	<update id="updateFinalApprove">
		update
					 tb_document
			 set final_approve_status = 'Y'
			   , status = '1'
			   , final_approve_date = sysdate
			   , process_reason = #{processReason}
		 where docu_no = #{docuNo}
	</update>	
	
	<!-- 중간결재자 전자문서 '반려' 기능 -->
	<update id="updateMidReject">
		update
					 tb_document
			 set mid_approve_status = 'N'
			   , status = '2'
			   , mid_reject_date = sysdate
		 where docu_no = #{docuNo}
	</update>	
  
  <!-- 최종결재자 전자문서 '반려' 기능 -->
	<update id="updateFinalReject">
		update
					 tb_document
			 set final_approve_status = 'N'
			 	 , status = '2'
			 	 , final_reject_date = sysdate
			   , process_reason = #{processReason}		 
		 where docu_no = #{docuNo}
	</update>	
	
	<!-- 중간결재자 불러오기 -->
	<select id="selectMidApprover" resultType="java.lang.String">
		select mid_approver
			from tb_document
		 where docu_no = #{docuNo}
	</select>
	
	<!-- 최종결재자 불러오기 -->
	<select id="selectFinalApprover" resultType="java.lang.String">
		select final_approver
			from tb_document
		 where docu_no = #{docuNo}
	</select>

	<!-- Ajax 첨부파일 리스트 불러오기(상세조회페이지에서) -->
	<select id="selectAttachmentList" resultMap="attachmentResultMap">
		select file_no
				 , file_path
				 , origin_name
	 		   , system_name
		 	   , type
			   , ref_no
		  from tb_attachment
		 where ref_no = #{docuNo}
		   and type = 'D'
	</select>

	<!-- 메인화면 오늘의 결재 '승인' 개수 -->
	<select id="approvalCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where trunc(final_approve_date) = trunc(current_date)
		 	 and
			 		( 
				 			(
					      d.status = '1'
					      and d.mem_no = #{memNo}
							 )
						or (
					    	d.status = '1'
					    	and d.dept_no = #{deptNo}
					    	and '팀장' = #{memGrade}
								)
						or (
								d.status = '1'
								and (d.mid_approve_status = 'Y' or mid_approver is null) 
								and final_approver = #{memNo}
								)
						or (
								d.ref_mem_no = #{memNo}
								and d.status = '1'
							) 
					 )	
	</select>
	
	<!-- 메인화면 오늘의 결재 '반려' 개수 -->
	<select id="rejectCount" resultType="_int">
		select 
					 count(*)
		  from tb_document d
		  join tb_mem m on (d.mem_no = m.mem_no)
		 where ( trunc(mid_reject_date) = trunc(current_date) or trunc(final_reject_date) = trunc(current_date))
		 	 and (
				 			 (
					      d.status = '2'
					      and d.mem_no = #{memNo}
							 )
						or (
					    	d.status = '2'
					    	and d.dept_no = #{deptNo}
					    	and '팀장' = #{memGrade}
								)
						or (
								d.status = '2'
								and (d.mid_approve_status = 'Y' or mid_approver is null) 
								and final_approver = #{memNo}
								)
						or (
								d.ref_mem_no = #{memNo}
								and d.status = '2'
								)	
					 )	
	</select>

</mapper>