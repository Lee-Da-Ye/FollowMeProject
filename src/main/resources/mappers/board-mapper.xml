<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap type="boardDto" id="BoardResult">
		<id column="board_no" property="boardNo"/>
		<result column="sub_no" property="subNo"/>
		<result column="board_title" property="boardTitle"/>
		<result column="mem_name" property="memNo"/>
		<result column="board_content" property="boardContent"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="read_count" property="readCount"/>
		<result column="board_type" property="boardType"/>
		<result column="attach_Count" property="attachCount"/>
		<result column="must_read" property="mustRead"/>
		<result column="dept_name" property="deptName"/>
		<result column="mem_grade" property="memGrade"/>
		<result column="mem_email" property="memEmail"/>
		<collection ofType="AttachmentDto" property="attachList">
			<id column="file_no" property="fileNo"/>
			<result column="file_path" property="filePath"/>
			<result column="system_name" property="systemName"/>
			<result column="origin_name" property="originName"/>
			<result column="type" property="type"/>
		</collection>	
	</resultMap>
	
	<resultMap type="ReplyDto" id="replyResult">
		<id column="reply_no" property="replyNo"/>		
		<result column="mem_name" property="replyWriter"/>
		<result column="ref_bno" property="refBno"/>
		<result column="reply_content" property="replyContent"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="status" property="status"/>
		<result column="mem_grade" property="memGrade"/>		
	</resultMap>
	
	
	
	<!-- 전체글 갯수 조회 -->
	<select id="selectBoardListCount" resultType="_int">
		select
				count(*)
		   from tb_board
		  where status = 'Y'
	</select>
	
	<!-- 전체글 목록 조회 -->
	<select id="selectBoardList" resultMap="BoardResult">
		select
				sub_no
			  , board_title
			  , mem_name
			  , b.enroll_date
			  , read_count
			  , must_read
			  ,
			  (
			  	select count(*)
			  	from tb_attachment
			  	where ref_no = sub_no
			  )attachCount
			  from tb_board b
			  join tb_mem using (mem_no)
			 where b.status = 'Y'
			 order
			 	by must_read desc, sub_no desc
	</select>
	
	<select id="selectLatestPostList" resultMap="BoardResult">
		select
				sub_no
			  , board_type
			  , board_title
		  from (
		  	select *
		  	from tb_board 
		  	order
		  	   by enroll_date desc
		  )
		  where rownum between 1 and 5
	</select>
	
	
	<select id="searchBoardListCount" resultType="_int">
		select
				count(*)
		   from tb_board b
		   join tb_mem using (mem_no)
		  where b.status = 'Y'
		  	and 
		  	(
		  	 board_title like '%' || #{keyword} || '%'
		  	 or mem_name like '%' || #{keyword} || '%'
		  	 or b.enroll_date like '%' || #{keyword} || '%'
		  	 )
	</select>
	
	
	<select id="searchBoardList" resultMap="BoardResult">
		select
				sub_no
			  , board_title
			  , mem_name
			  , b.enroll_date
			  , read_count
			  ,(
				  select count(*)
				    from tb_attachment
				   where ref_no = b.sub_no
			  )
			  from tb_board b
			  join tb_mem using (mem_no)
			 where b.status = 'Y'
			 and 
			  (
			  mem_name like '%' || #{keyword} || '%'
			  or board_title like '%' || #{keyword} || '%'
			  or b.enroll_date like '%' || #{keyword} || '%'
			  )
			 order
			 	by sub_no desc
	</select>
	
	
	<insert id="insertBoard" >
		insert
		  into tb_board
		  (
		    board_no
		  , sub_no
		  , board_title
		  , mem_no
		  , board_content
		  , board_type
		  , must_read
		  )
		  values
		  (
		    case
		    	when #{boardType} = 'NO' then 'NOTICE_' || seq_nno.nextval
		    	when #{boardType} = 'CO' then 'COMPANY_' || seq_cno.nextval
		    end
		    , seq_bno.nextval
		    , #{boardTitle}
		    , #{memNo}
		    , #{boardContent}
		    , #{boardType}
		    , #{mustRead}	
		  )
		    
	</insert>
	
	<insert id="insertAttach">
		insert
				into tb_attachment
				(
				  file_no
				, file_path
				, system_name
				, origin_name
				, type
				, ref_no
				)
				values
				(
				  seq_fileno.nextval
				, #{filePath}
				, #{systemName}
				, #{originName}
				, #{type}
				<choose>
				  	<when test="refNo == 0">
					, seq_bno.currval
				  	</when>
				  	<otherwise>
				  	, #{refNo}
				  	</otherwise>
				</choose>
				)
				
				
				
	
	</insert>
	
	<update id="updateIncreaseCount">
		update tb_board
	    set read_count = read_count + 1
	    where
	        (
	            (board_no = 'NOTICE_' || #{boardNo} AND board_type = 'NO')
	            OR
	            (board_no = 'COMPANY_' || #{boardNo} AND board_type = 'CO')
	            OR
	            (sub_no = #{boardNo})
	        )	
	</update>
	
	
	<select id="selectBoardDetail" resultMap="BoardResult">
		select
				b.board_no
			  , b.sub_no
			  , b.board_type
			  , b.board_title
			  , mem_name
			  , b.enroll_date
			  , b.board_content
			  , a.file_no
			  , a.file_path
			  , a.system_name
			  , a.origin_name
			  , dept_name
			  , mem_grade
			  , mem_email
		  from tb_board b
		  join tb_mem using (mem_no)
		  join tb_department using (dept_no)
		  left join tb_attachment a on type in('N','C')and a.ref_no = b.sub_no
		  where b.sub_no = #{subNo}		  				
	</select>
	
	<select id="selectDelFileList" resultMap="BoardResult">
		select
			   file_no
			 , file_path
			 , system_name
			 , origin_name
			 , type
	  from tb_attachment
		 <where>
		 	<foreach item="item" collection="array"
		 			open="file_no in (" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </where>
	</select>
	
	
	<update id="updateBoard">
		update
				 tb_board
			 set board_title = #{boardTitle}
			   , board_content = #{boardContent}
		 where sub_no = #{subNo}
	</update>
	
	<delete id="deleteAttach">
		delete
		  from tb_attachment
		 <where>
		 	<foreach item="item" collection="array"
		 			 open="file_no in (" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </where>
	</delete>
	
	
	
	<select id="selectReplyList" resultMap="replyResult">
		select
				r.reply_no
			  , m.mem_grade
			  , m.mem_name
			  , r.reply_content
			  , r.enroll_date
		 from tb_reply r
		 join tb_mem m on mem_no = reply_writer
		 join tb_board b on sub_no = ref_bno
		 where r.status = 'Y'
		   and ref_bno = #{subNo}
		 order
		 	by reply_no desc		  
	</select>
	
	
	<insert id="insertReply">
		insert 
		  into tb_reply
		  (
		  	reply_no
		  , reply_content
		  , ref_bno
		  , reply_writer
		  )
		  values
		  (
		  	seq_replyno.nextval
		  , #{replyContent}
		  , #{refBno}
		  , #{replyWriter}
		  )
		  
	</insert>
	
	<update id="deleteReply">
		update
				   tb_reply
			 set status = 'N'
		 where reply_no = #{replyNo}
	</update>
	
	


</mapper>