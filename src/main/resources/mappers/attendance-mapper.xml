<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="attendanceMapper">
	<resultMap type="attendanceDto" id="attendanceMap">
		<id column="mem_no" property="memNo"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="work_time" property="workTime"/>
		<result column="type" property="type"/>
		<result column="att_date" property="attDate"/>
		<result column="att_content" property="attContent"/>
		<result column="targetMonth" property="targetMonth"/>
		<result column="workingDays" property="workingDays"/>
		<result column="monthWorkTime" property="monthWorkTime"/>
		<result column="avgWorkTime" property="avgWorkTime"/>
		<result column="totalWorkTime" property="totalWorkTime"/>
		<result column="totalWorkingDays" property="totalWorkingDays"/>
		
	</resultMap>
	
	<resultMap type="leavepDto" id="leavepMap">
		<id column="leavep_no" property="leavepNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="leavep_date" property="leavepDate"/>
		<result column="able_date" property="ableDate"/>
		<result column="pay" property="pay"/>
		<result column="used" property="used"/>
		<result column="left" property="left"/>
	
	</resultMap>


	<!-- 출근 시간 등록 -->
	<insert id="insertWorktime">
		 insert into tb_attendance (mem_no, att_date, type)
   		 values (#{memNo}, sysdate, #{type})
	</insert>

<!-- 퇴근 시간 등록 -->
<update id="updateWorktime">
<![CDATA[
 update 
    tb_attendance
 set 
    end_time = CURRENT_TIMESTAMP,
    type = CASE
               WHEN (CURRENT_TIMESTAMP - start_time) < INTERVAL '4' HOUR THEN 'D' 
               WHEN (CURRENT_TIMESTAMP - start_time) < INTERVAL '8' HOUR THEN 'C'
               ELSE 'B'
           END
 where 
    mem_no = #{memNo}
    and trunc(att_date) = trunc(sysdate)
 ]]>
</update>

	
<!-- 근태 유형 조회 서비스 -->
	<select id="selectStatus" resultMap="attendanceMap">
    SELECT 
   		 start_time
   		,end_time
   		,work_time
   		,type
   		,att_date
   		,att_content
    FROM 
    	tb_attendance
    WHERE mem_no = #{memNo}
    AND trunc(att_date) = trunc(sysdate)
</select>
<!-- 근태 조회 서비스 (오늘 날짜) -->
	<select id="selectAttendance" resultMap="attendanceMap">
    SELECT 
   		 mem_no
      ,TO_CHAR(start_time,'HH24:MI:SS') start_time
   		,TO_CHAR(end_time,'HH24:MI:SS') end_time
   		,work_time
   		,type
   		,att_date
   		,att_content
    FROM 
    	tb_attendance
    WHERE mem_no = #{memNo}
    AND trunc(att_date) = trunc(sysdate)
    
</select>
<!-- 타입별 출석 데이터 카운트 조회 -->
 <select id="countAttendanceByType" resultMap="attendanceMap">
     SELECT 
         type, 
         COUNT(*) AS count 
     FROM 
         tb_attendance 
     WHERE 
         mem_no = #{memNo} 
     AND 
         trunc(att_date, 'MM') = trunc(sysdate, 'MM')
     AND 
         type IN ('B', 'C', 'D', 'E') 
     GROUP BY 
         type
 </select>
	
	<!-- 월별 근무 시간 및 평균 근무 시간 조회 -->
<select id="monthAttendanceTime" resultMap="attendanceMap">
<![CDATA[
 SELECT 
        TO_CHAR(att_date, 'YYYY-MM') AS month,
        COUNT(DISTINCT TO_CHAR(att_date, 'YYYY-MM-DD')) AS workingDays,
        TRUNC(SUM(
            CASE 
                WHEN EXTRACT(HOUR FROM start_time) < 12 AND EXTRACT(HOUR FROM end_time) >= 13 THEN
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time)) -
                    3600 
                ELSE
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time))
            END
        ) / 3600) AS monthWorkTime,
        ROUND(AVG(
            CASE 
                WHEN EXTRACT(HOUR FROM start_time) < 12 AND EXTRACT(HOUR FROM end_time) >= 13 THEN
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time)) -
                    3600 
                ELSE
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time))
            END
        ) / 3600, 1) AS avgWorkTime
    FROM 
        tb_attendance
    WHERE 
        mem_no = #{memNo} 
        AND TO_CHAR(att_date, 'YYYY-MM') = TO_CHAR(sysdate, 'YYYY-MM')
    GROUP BY 
        TO_CHAR(att_date, 'YYYY-MM')
    ORDER BY 
        month DESC
     ]]>
</select>

	<!-- 총 근무시간 및 총 근무일수 조회 -->
<select id="totalAttendanceTime" resultMap="attendanceMap">
<![CDATA[
SELECT 
    COUNT(DISTINCT TO_CHAR(att_date, 'YYYY-MM-DD')) AS totalWorkingDays,
    TRUNC(SUM(
        CASE 
            WHEN EXTRACT(HOUR FROM start_time) < 12 AND EXTRACT(HOUR FROM end_time) >= 13 THEN
                EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                EXTRACT(SECOND FROM (end_time - start_time)) -
                3600 
            ELSE
                EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                EXTRACT(SECOND FROM (end_time - start_time))
        END
    ) / 3600) AS totalWorkTime
FROM 
    tb_attendance
WHERE 
    mem_no = #{memNo} 
     ]]>
</select>

 <!-- Ajax 월별 근무 시간 및 평균 근무 시간 조회 -->
<select id="AjaxMonthAttendanceTime" resultMap="attendanceMap">
<![CDATA[
  SELECT 
        TO_CHAR(att_date, 'YYYY-MM') AS month,
        COUNT(DISTINCT TO_CHAR(att_date, 'YYYY-MM-DD')) AS workingDays,
        TRUNC(SUM(
            CASE 
                WHEN EXTRACT(HOUR FROM start_time) < 12 AND EXTRACT(HOUR FROM end_time) >= 13 THEN
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time)) -
                    3600 
                ELSE
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time))
            END
        ) / 3600) AS monthWorkTime,
        ROUND(AVG(
            CASE 
                WHEN EXTRACT(HOUR FROM start_time) < 12 AND EXTRACT(HOUR FROM end_time) >= 13 THEN
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time)) -
                    3600 
                ELSE
                    EXTRACT(DAY FROM (end_time - start_time)) * 24 * 3600 +
                    EXTRACT(HOUR FROM (end_time - start_time)) * 3600 +
                    EXTRACT(MINUTE FROM (end_time - start_time)) * 60 +
                    EXTRACT(SECOND FROM (end_time - start_time))
            END
        ) / 3600, 1) AS avgWorkTime
    FROM 
        tb_attendance
    WHERE 
        mem_no = #{memNo} 
        AND EXTRACT(YEAR FROM att_date) = #{currentYear}
        AND EXTRACT(MONTH FROM att_date) = #{currentMonth}
    GROUP BY 
        TO_CHAR(att_date, 'YYYY-MM')
    ORDER BY 
        month DESC
     ]]>
</select>

	<!-- Ajax 타입별 출석 데이터 카운트 조회 -->
 <select id="AjaxCountAttendanceByType" resultMap="attendanceMap">
     SELECT 
        type, 
        COUNT(*) AS count 
    FROM 
        tb_attendance 
    WHERE 
        mem_no = #{memNo} 
    AND 
        EXTRACT(YEAR FROM att_date) = #{currentYear}
    AND 
        EXTRACT(MONTH FROM att_date) = #{currentMonth}
    AND 
        type IN ('B', 'C', 'D', 'E') 
    GROUP BY 
        type
 </select>
		<!-- 연차 등록 -->
<insert id="insertDefaultLeave" parameterType="LeavepDto">
    INSERT INTO tb_leavepay (leavep_no,mem_no, able_date)
    VALUES (SEQ_LEAVEPNO.NEXTVAL,#{memNo}, #{ableDate})
</insert>

	
	
	
	
	
	
	
	
	
	</mapper>